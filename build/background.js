// Generated by CoffeeScript 1.3.1
(function() {
  var PicplumSend, chrome_send,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  PicplumSend = (function() {

    PicplumSend.name = 'PicplumSend';

    PicplumSend.prototype.api_base = "https://www.picplum.com/api/1";

    PicplumSend.prototype.fb_url = 'www.facebook.com/photo.php';

    PicplumSend.prototype.download_url = null;

    function PicplumSend() {
      this.add_photo = __bind(this.add_photo, this);

      this.getClickHandler = __bind(this.getClickHandler, this);

      this.content_msg = __bind(this.content_msg, this);

      this.checkForValidUrl = __bind(this.checkForValidUrl, this);
      this.chrome_events();
      this.setup_context_menu();
    }

    PicplumSend.prototype.checkForValidUrl = function(tabId, changeInfo, tab) {
      if (tab.url.indexOf(this.fb_url) > -1) {
        return chrome.pageAction.show(tabId);
      }
    };

    PicplumSend.prototype.content_msg = function(request, sender, send_response) {
      chrome.pageAction.show(sender.tab.id);
      switch (request.msg) {
        case "facebook_image":
          this.download_url = request.href;
          break;
        case "send_button_click":
          this.add_photo(sender.tab);
      }
      this.download_url = request.href;
      return send_response({});
    };

    PicplumSend.prototype.notify = function(args, timeout) {
      var noti;
      if (timeout == null) {
        timeout = 3500;
      }
      noti = webkitNotifications.createNotification(args.img, args.title, args.sub_title);
      noti.show();
      return window.setInterval(function() {
        return noti.cancel();
      }, timeout);
    };

    PicplumSend.prototype.getClickHandler = function() {
      var _this = this;
      return function(info, tab) {
        _this.download_url = info.srcUrl;
        return _this.add_photo(tab);
      };
    };

    PicplumSend.prototype.setup_context_menu = function() {
      return chrome.contextMenus.create({
        "title": "Send to Picplum",
        "type": "normal",
        "contexts": ["image"],
        "onclick": this.getClickHandler()
      });
    };

    PicplumSend.prototype.chrome_events = function() {
      chrome.tabs.onUpdated.addListener(this.checkForValidUrl);
      chrome.pageAction.onClicked.addListener(this.add_photo);
      return chrome.extension.onRequest.addListener(this.content_msg);
    };

    PicplumSend.prototype.add_photo = function(tab) {
      var post_image,
        _this = this;
      console.log(this.download_url);
      if (this.download_url) {
        chrome.tabs.sendRequest(tab.id, {
          msg: 'loader_show',
          loader_msg: 'Sending photo to Picplum'
        }, function() {});
        post_image = $.post("" + this.api_base + "/photos", {
          image_url: this.download_url,
          via: 'web'
        });
        post_image.success(function(data) {
          return chrome.tabs.sendRequest(tab.id, {
            msg: 'loader_show_hide',
            loader_msg: 'Photo sent to Picplum!'
          }, function() {});
        });
        post_image.error(function(error_data, textStatus, errorThrown) {
          if (error_data.status === 401) {
            _this.notify({
              img: '',
              title: 'Please login to Picplum',
              sub_title: ''
            });
            return chrome.tabs.create({
              'url': 'https://www.picplum.com/login',
              'selected': true
            });
          }
        });
        return post_image.complete(function() {});
      }
    };

    PicplumSend.prototype.post_photo = function() {};

    return PicplumSend;

  })();

  chrome_send = new PicplumSend();

}).call(this);
